<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<article xml:id="container-bci-general" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <title>General-purpose &bci;s</title>
  </info>
  <para>
    There are four general-purpose &bcia;s, and each container image comes with
    a minimum set of packages to keep its size low. You can use a
    general-purpose &bcia; either as a starting point for building custom
    container images, or as a platform for deploying specific software.
  </para>
  <para>
    &suse; offers several general-purpose &bcia;s that are intended as
    deployment targets or as foundations for creating customized images:
    &bcia;-Base, &bcia;-Minimal, &bcia;-Micro and &bcia;-BusyBox. These images
    share the common &slsa; base, and none of them ship with a specific
    language or an application stack. All images feature the RPM database (even
    if the specific image does not include the RPM package manager) that can be
    used to verify the provenance of every file in the image. Each image
    includes the &slsa; certificate bundle, which allows the deployed
    applications to use the system's certificates to verify TLS connections.
  </para>
  <para>
    The table below provides a quick overview of the differences between
    &bcia;-Base, &bcia;-Minimal, &bcia;-Micro and &bcia;-BusyBox.
  </para>
  <table frame="all" rowsep="1" colsep="1">
    <title>Support matrix</title>
    <tgroup cols="5">
      <colspec colname="col_1" colwidth="20*"/>
      <colspec colname="col_2" colwidth="20*"/>
      <colspec colname="col_3" colwidth="20*"/>
      <colspec colname="col_4" colwidth="20*"/>
      <colspec colname="col_5" colwidth="20*"/>
      <thead>
        <row>
          <entry align="center" valign="top">Features</entry>
          <entry align="center" valign="top">&bcia;-Base</entry>
          <entry align="center" valign="top">&bcia;-Minimal</entry>
          <entry align="center" valign="top">&bcia;-Micro</entry>
          <entry align="center" valign="top">&bcia;-BusyBox</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry align="center" valign="top">
            <para>
              glibc
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
        </row>
        <row>
          <entry align="center" valign="top">
            <para>
              CA certificates
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
        </row>
        <row>
          <entry align="center" valign="top">
            <para>
              rpm database
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
        </row>
        <row>
          <entry align="center" valign="top">
            <para>
              coreutils
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              busybox
            </para>
          </entry>
        </row>
        <row>
          <entry align="center" valign="top">
            <para>
              bash
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ╳
            </para>
          </entry>
        </row>
        <row>
          <entry align="center" valign="top">
            <para>
              rpm (binary)
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ╳
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ╳
            </para>
          </entry>
        </row>
        <row>
          <entry align="center" valign="top">
            <para>
              zypper
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ✓
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ╳
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ╳
            </para>
          </entry>
          <entry align="center" valign="top">
            <para>
              ╳
            </para>
          </entry>
        </row>
      </tbody>
    </tgroup>
  </table>
  <section xml:id="id-sle-bci-base-and-sle-bci-init-when-you-need-flexibility">
    <title>&bcia;-Base and &bcia;-Init: When you need flexibility</title>
    <para>
      This &bcia; comes with the &zypper; package manager and the free SLE_BCI
      repository. This allows you to install software available in the
      repository and customize the image during the build. The downside is the
      size of the image. It is the largest of the general-purpose &bcia;s, so
      it is not always the best choice for a deployment image.
    </para>
    <para>
      A variant of &bcia;-Base called &bcia;-Init comes with systemd
      preinstalled. The &bcia;-Init container image can be useful in scenarios
      requiring systemd for managing services in a single container.
    </para>
    <important>
      <title>Using &bcia;-init with Docker</title>
      <para>
        When using &bcia;-init container with Docker, you must use the
        following arguments for &systemd; to work correctly in the container:
      </para>
<screen>&gt; docker run -ti --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:rw --cgroupns=host registry.suse.com/bci/bci-init:latest</screen>
      <para>
        To correctly shut down the container, use the following command:
      </para>
<screen>&gt; docker kill -s SIGRTMIN+3 <replaceable>CONTAINER_ID</replaceable></screen>
    </important>
  </section>
  <section xml:id="id-sle-bci-minimal-when-you-do-not-need-zypper">
    <title>&bcia;-Minimal: When you do not need &zypper;</title>
    <para>
      This is a stripped-down version of the &bcia;-Base image. &bcia;-Minimal
      comes without &zypper;, but it does have the RPM package manager
      installed. This significantly reduces the size of the image. However,
      while RPM can install and remove packages, it lacks support for
      repositories and automated dependency resolution. The &bcia;-Minimal
      image is therefore intended for creating deployment containers, and then
      installing the desired RPM packages inside the containers. Although you
      can install the required dependencies, you need to download and resolve
      them manually. However, this approach is not recommended as it is prone
      to errors.
    </para>
  </section>
  <section xml:id="sec-bci-variants-micro">
    <title>&bcia;-Micro: When you need to deploy static binaries</title>
    <para>
      This image is similar to &bcia;-Minimal but without the RPM package
      manager. The primary use case for the image is deploying static binaries
      produced externally or during multi-stage builds. As there is no
      straightforward way to install additional dependencies inside the
      container image, we recommend deploying a project using the
      &bcia;-Minimal image only when the final build artifact bundles all
      dependencies and has no external runtime requirements (like Python or
      Ruby).
    </para>
  </section>
  <section xml:id="sec-bci-variants-busybox">
    <title>&bcia;-BusyBox: When you need the smallest and GPLv3-free image</title>
    <para>
      Similar to &bcia;-Micro, the &bcia;-BusyBox image comes with the most
      basic tools only. However, these tools are provided by the BusyBox
      project. This has the benefit of further size reduction. Furthermore, the
      image contains no GPLv3 licensed software. When using the image, keep in
      mind that there are certain differences between the BusyBox tools and the
      GNU Coreutils. So scripts written for a system that uses GNU Coreutils
      may require modification to work with BusyBox.
    </para>
  </section>
  <section xml:id="sec-bci-variants-size">
    <title>Approximate sizes</title>
    <para>
      For your reference, the list below provides an approximate size of each
      &bcia;. Keep in mind that the provided numbers are rough estimations.
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>&bcia;-Base</literal> ~94 MB
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>&bcia;-Minimal</literal> ~42 MB
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>&bcia;-Micro</literal> ~26 MB
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>&bcia;-BusyBox</literal> ~14 MB
        </para>
      </listitem>
    </itemizedlist>
  </section>
</article>
