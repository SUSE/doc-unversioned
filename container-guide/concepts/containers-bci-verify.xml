<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<article xml:id="container-bci-verify" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <title>Verifying &bcia;s with Cosign</title>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker>
        <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
        <dm:component>Smart Docs</dm:component>
        <dm:product>Documentation</dm:product>
        <dm:assignee>dpopov@suse.com</dm:assignee>
      </dm:bugtracker>
      <dm:translation>no</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    To verify a &bcia;, run Cosign in the container. The command below fetches
    the signing key from the &suse; server and uses it to verify the latest
    BCI-Base container image.
  </para>
<screen>&gt; podman run --rm -it gcr.io/projectsigstore/cosign verify \
      --key https://ftp.suse.com/pub/projects/security/keys/container-key.pem \
      registry.suse.com/bci/bci-base:latest | tail -1 | jq
  
  [
    {
      "critical": {
        "identity": {
          "docker-reference": "registry.suse.com/bci/bci-base"
        },
        "image": {
          "docker-manifest-digest": "sha256:52a828600279746ef669cf02a599660cd53faf4b2430a6b211d593c3add047f5"
        },
        "type": "cosign container image signature"
      },
      "optional": {
        "creator": "OBS"
      }
    }
  ]</screen>
  <para>
    The signing key can be used to verify all &bcia;s, and it also ships with
    &slea; 15 (the
    <filename>/usr/share/container-keys/suse-container-key.pem</filename> file).
  </para>
  <para>
    You can also check &bcia;s against
    <link xlink:href="https://github.com/sigstore/rekor">rekor</link>, the
    immutable tamper resistant ledger. For example:
  </para>
<screen>&prompt.user;podman run --rm -it -e COSIGN_EXPERIMENTAL=1 gcr.io/projectsigstore/cosign \
      verify --key https://ftp.suse.com/pub/projects/security/keys/containerâ€“key.pem \
      registry.suse.com/bci/bci-base:latest | tail -1 | jq
  [
    {
      "critical": {
        "identity": {
          "docker-reference": "registry.suse.com/bci/bci-base"
        },
        "image": {
          "docker-manifest-digest": "sha256:52a828600279746ef669cf02a599660cd53faf4b2430a6b211d593c3add047f5"
        },
        "type": "cosign container image signature"
      },
      "optional": {
        "creator": "OBS"
      }
    }
  ]</screen>
  <para>
    If verification fails, the output of the <command>cosign verify</command>
    command is similar to the one below.
  </para>
<screen>Error: no matching signatures:
  crypto/rsa: verification error
  main.go:62: error during command execution: no matching signatures:
  crypto/rsa: verification error</screen>
</article>
