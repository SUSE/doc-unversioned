<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="file:/usr/share/xml/geekodoc/rng/geekodoc5-flat.rnc"
   type="application/relax-ng-compact-syntax"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;

  <!-- Trento specific entities -->
  <!ENTITY trentopremium        "Trento Premium">
  <!ENTITY trentoadmin          "trentoservice">
  <!ENTITY trentoserverip       "192.168.1.2">
  <!ENTITY trentoservername     "<replaceable
    xmlns='http://docbook.org/ns/docbook'>TRENTO_SERVER_HOSTNAME</replaceable>">
  <!ENTITY trentoagentname      "<replaceable xmlns='http://docbook.org/ns/docbook'>TRENTO_AGENT</replaceable>">
  <!ENTITY trentoprompt         "&trentoadmin;@&trentoservername;:~>">
  <!ENTITY trentoagentprompt    "&trentoadmin;@&trentoagentname;:~>">
  <!ENTITY trentoserver.prompt  "<prompt xmlns='http://docbook.org/ns/docbook'>&trentoprompt; </prompt>">
  <!ENTITY trentoagent.prompt   "<prompt xmlns='http://docbook.org/ns/docbook'>&trentoagentprompt; </prompt>">
  <!ENTITY t.server             "Trento Server">
  <!ENTITY t.agent              "Trento Agent">
  <!ENTITY t.web                "Trento web console">
  <!ENTITY k8s                  "Kubernetes">
  <!ENTITY rancher.k8s.engine   "Rancher &k8s; Engine">
]>

<!--

2021-11-18
As agreed on https://confluence.suse.com/x/DAEcN on our Trento doc kick off

-->

<article xml:lang="en" xml:id="article-sap-trento" version="5.1" 
    xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Getting started with &trentopremium;</title>
  <subtitle>&sles4sapreg;</subtitle>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker>
        <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
        <dm:component>Trento</dm:component>
        <dm:product>Documentation</dm:product>
        <dm:assignee>thomas.schraitle@suse.com</dm:assignee>
      </dm:bugtracker>
      <dm:editurl>https://github.com/SUSE/doc-unversioned/edit/main/trento/xml/</dm:editurl>
      <dm:translation>no</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
       &trentopremium; is an open cloud native web console that aims to help
       &sap; Basis consultants and administrators to check the configuration, monitor and manage the entire OS stack of their
       &sap; environments, including HA features.
      </para>
    </abstract>
    <xi:include href="common_copyright_gfdl.xml" />
    </info>

  <important>
    <title>Trento is an evolving product</title>
    <para>
      The product continues to be under active development and is available at no extra cost for any &suse;
      customer with a registered &sles4sap;&nbsp;15 (SP1 or higher).
      Contact <link xlink:href="https://www.suse.com/support"/> for further assistance.
    </para>
  </important>

  <section xml:id="sec-trento-what">
    <title>What is &trentopremium;?</title>
    <para>
      &trentopremium; is the extended version of the Trento community project containing
      additional checks. Apart from their naming, both are comprehensive monitoring solutions
      consisting of two main components, the &t.server; and the &t.agent;.
      Both Trento variants provide the following features:
    </para>
    <!--
      from https://confluence.suse.com/x/uoOyN
    -->
    <itemizedlist>
      <listitem>
        <para>A simplified, reactive web UI targeting &sap; admins </para>
      </listitem>
      <listitem>
        <para>Automated discovery of &sap; Systems, &sap; Instances,
          &hana; clusters and ASCS/ERS clusters</para>
      </listitem>
      <listitem>
        <para>Configuration validation for &hana; Scale-Up
          Performance-optimized two-node clusters deployed on Azure, AWS, GCP or on-premise bare metal platforms, including KVM and Nutanix
        </para>
      </listitem>
      <listitem>
        <para>
          Monitoring of CPU and Memory usage at host level through basic integration
          with Grafana and Prometheus
        </para>
      </listitem>
      <listitem>
        <para>
          Email alerting for critical events in the monitored landscape
        </para>
      </listitem>
    </itemizedlist>

    <para> The <emphasis role="strong">&t.server;</emphasis> is an
      independent, cloud native, distributed system, designed to run
      on a &k8s; cluster.
      The &t.server; interacts with users via a web front-end.
    </para>
    <para> The <emphasis role="strong">&t.agent;</emphasis> is a single
      background process (<systemitem>trento agent</systemitem>) running
      on each host of the SAP infrastructure that is monitored.
    </para>
    <para>
      For both &trentopremium; and Trento Community, &suse; collects telemetry data relevant for further
      product development. </para>
    <para> See <xref linkend="fig-trento-architecture" /> for additional
      details. </para>
    <!-- toms 2021-11-26: Do we have a vector graphic for this?
      https://github.com/trento-project/trento/blob/main/docs/trento-architecture.svg.
    -->
    <figure xml:id="fig-trento-architecture">
      <title>Architectural overview</title>
      <mediaobject>
        <imageobject>
          <imagedata width="80%"
            fileref="trento-architecture-outline.png" />
          <!-- Source: https://confluence.suse.com/display/SAP/Architecture -->
        </imageobject>
      </mediaobject>
    </figure>
  </section>

  <section xml:id="sec-trento-product-lifecycle-update-strategy">
    <title>Product lifecycle and update strategy</title>
    <!--
      Most ist taken from https://confluence.suse.com/x/uoOyN
    -->
    <para>Trento Premium is available at no extra cost for SLES for SAP subscribers. Particularly, Trento's two main components have the following product lifecycles:</para>

    <variablelist>
      <varlistentry>
        <term>&t.agent;</term>
        <listitem>
          <formalpara>
            <title>Delivery mechanism:</title>
            <para>RPM package for &sles4sap;&nbsp;15&nbsp;SP1 and
              newer.</para>
          </formalpara>
          <formalpara>
            <title>Supported runtime:</title>
            <para> Supports &sles4sap;&nbsp;15&nbsp;SP1 and newer.
            </para>
          </formalpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>&t.server;</term>
        <listitem>
          <formalpara>
            <title>Delivery mechanism:</title>
            <para> A set of container images from the &suse;
              registry together with a Helm chart for easy
              installation. </para>
          </formalpara>
          <formalpara>
            <title>&k8s;:</title>
            <para> The &t.server; runs on any current Cloud Native
              Computing Foundation (CNCF)-certified &k8s;
              distributions based on a x86_64 architecture. Depending on your background and
              needs, &suse; supports several usage scenarios:
            </para>
          </formalpara>
          <itemizedlist>
            <listitem>
              <para> If you already use a CNCF-certified &k8s; cluster,
                you can run the &t.server; in it. </para>
            </listitem>
            <listitem>
              <para> If you have no &k8s; cluster and want enterprise
                support, &suse; recommends &suse; Rancher with
                &rancher.k8s.engine; (RKE) version 1 or
                2. </para>
            </listitem>
            <listitem>
              <para> If you do not have a &k8s; enterprise solution and you would
                like to test &trentopremium;, &suse; Rancher's K3s could be an easy
                way to get started. Keep in mind that K3s default installation process 
                deploys a single node &k8s; cluster, which is not a recommended 
                setup for a stable Trento production instance.
               </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
    </variablelist>

  </section>

<!--
 toms 2021-11-19:
 Do we have specific terms which needs to be explained in a terminology section?
-->

  <section xml:id="sec-trento-requirements">
    <title>Requirements</title>
    <para> This section describes requirements for the &t.server; and its
      &t.agent;s. </para>
    <section xml:id="sec-trento-server-requirements">
      <title>&t.server; requirements</title>
      <para> Running all the &t.server; components requires a minimum of 3&nbsp;GB of RAM,
        two CPU cores and 64&nbsp;GB of storage.
        When using K3s, such storage should be provided under <filename>/var/lib/rancher/k3s</filename>.
      </para>
      <para> While the &t.server; supports various usage scenarios,
        depending on the existing infrastructure, it is designed to be
        cloud native and OS agnostic. It can
        be installed on the following services: </para>
      <!--
        toms 2021-12-06: taken from "Draft - Various Tidbits regarding Productization"
        (https://confluence.suse.com/x/tgCnMg)
      -->
      <itemizedlist>
        <listitem>
          <para>RKE1 (&rancher.k8s.engine; version 1)</para>
        </listitem>
        <listitem>
          <para>RKE2</para>
        </listitem>
        <listitem>
          <para>any other CNCF-certified &k8s; running on x86_64 architecture</para>
        </listitem>
      </itemizedlist>
     <para> A proper, production ready installation of &t.server; requires &k8s;
      knowledge. The Helm chart is meant to be used by customers lacking such knowledge
      or who want to get started quickly. However, Helm chart delivers a basic deployment of the &t.server; with all the components running
      on a single node of the cluster.</para>
    </section>
    <section xml:id="sec-trento-agent-requirements">
      <title>&t.agent; requirements</title>
      <para> The resource footprint of the &t.agent; is designed to not
        impact the performance of the host it runs on. </para>
      <para> The &t.agent; component needs to interact with several
        low-level system components that are part of the &sles4sap; distribution. </para>
    </section>
    <section xml:id="sec-trento-network-requirements">
      <title>Network requirements</title>
      <itemizedlist>
        <listitem>
          <para>
            <remark>toms 2021-12-06: do we have UDP here too?</remark>
            From any &t.agent; host, the web component of the &t.server; must be reachable via HTTP (port TCP/80) or via HTTPS (port TCP/443) if SSL is enabled.
          </para>
        </listitem>
        <listitem>
          <para>
            From any &t.agent; host, the checks engine component of the &t.server;, called Wanda, must be reachable via Advanced Message Queuing Protocol or AMQP (port TCP/5672).
          </para>
        </listitem>
         <listitem>
          <para>
            The Prometheus component of the &t.server; must be able to reach the Node Exporter in the &t.agent; hosts (port TCP/9100).
          </para>
        </listitem>
        <listitem>
          <para>The &sap; Basis administrator needs access to the web component of the &t.server; via HTTP (port TCP/80) or via HTTPS (port TCP/443) if SSL is enabled. </para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="sec-trento-installation-prerequisites">
      <title>Installation prerequisites</title>
      <itemizedlist>
        <listitem>
          <formalpara>
            <title>&t.server;</title>
            <para>Access to &suse; public registry for the deployment of &t.server; premium containers.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>&t.agent;s</title>
            <para>A registered &sles4sap; 15 (SP1 or higher) distribution.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section xml:id="sec-trento-installing-trentoserver">
    <title>Installing &t.server;</title>
<!--    https://confluence.suse.com/display/SAP/Installing+Trento+Premium-->
    <important>
      <title>Expect changes in the installation procedure</title>
      <para>
        The product is under active development. Expect changes in the described
        installation procedure.
      </para>
    </important>

    <para> The subsection uses the following placeholders: </para>
    <itemizedlist>
      <listitem>
        <para><replaceable>TRENTO_SERVER_HOSTNAME</replaceable>: the
          host name of the &t.server; host.</para>
      </listitem>
      <listitem>
        <para>
          <replaceable>ADMIN_PASSWORD</replaceable>: the password that the &sap; administrator
          will use to access the web console. It should have at least 8 characters. 
        </para>
      </listitem>
    </itemizedlist>

    <!--  -->
    <section xml:id="sec-trento-install-trentoserver-on-existing-k8s-cluster">
      <title>Installing &t.server; on an existing &k8s; cluster</title>
      <para>
        &t.server; consists of a few components which are delivered as container images and meant
       to be deployed on a &k8s; cluster. A manual deployment of these components in a production
       ready fashion requires &k8s; knowledge. Customers lacking such knowledge or who want to get started quickly
       with Trento, can use the Trento Helm chart. This approach automates the deployment of all the required components
       on a single &k8s; cluster node. You can use the Trento Helm chart in order to install &t.server;
       on a existing &k8s; cluster as follows:
      </para>
      <procedure>
        <step>
          <para>Install Helm:</para>
          <screen>curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash</screen>
        </step>
         <step>
          <para>Connect Helm to the existing &k8s; cluster.</para>
        </step>
        <step>
        <para>
          Install the &t.server; by pulling the Trento Helm chart with Helm:
        </para>
        <screen>helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable></screen>
       <para>
          When using a Helm version lower than 3.8.0, a experimental flag must be set before the helm command:
        </para>
         <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable></screen>
      </step>
        <step>
          <para> To verify that the &t.server; installation was
            successful, open the URL of the &t.web;
            (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>)
            from a workstation located in the &sap; administrator's LAN. </para>
        </step>
      </procedure>
    </section>

    <section xml:id="sec-trento-install-trentoserver-on-k3s">
      <title>Installing &t.server; on K3s</title>
      <para> If you do not have a &k8s; cluster or have one but do not want to use
        it for Trento, &suse; Rancher's K3s provides you with an easy way to get started.
       All you need is a small server or VM (see <xref
          linkend="sec-trento-server-requirements" /> for minimum requirements)
        and follow steps in <xref linkend="pro-trento-manually-installing" /> to
        get &t.server; up and running. </para>
     
     <important>
      <title>Deploying Trento on K3s</title>
      <para>
        The following procedure deploys &t.server; on a single-node K3s cluster. Such set up is not recommended for production purposes.
      </para>
    </important>

      <procedure xml:id="pro-trento-manually-installing">
      <title>Manually installing Trento on a &t.server; host</title>
      <step>
        <para> Log in to the &t.server; host.
        </para>
      </step>
      <step xml:id="st-install-k3s">
        <para>Install K3s:</para>
        <stepalternatives>
          <step>
            <para>Installing as user &rootuser;</para>
            <screen>&prompt.root;curl -sfL https://get.k3s.io | INSTALL_K3S_SKIP_SELINUX_RPM=true sh</screen>
          </step>
          <step>
            <para>Installing as non-&rootuser; user:</para>
            <screen>&prompt.user;curl -sfL https://get.k3s.io | INSTALL_K3S_SKIP_SELINUX_RPM=true sh -s - --write-kubeconfig-mode 644</screen>
          </step>
        </stepalternatives>
      </step>
      <step xml:id="st-install-helm">
        <para>Install Helm as &rootuser;:</para>
        <screen>&prompt.root;curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash</screen>
      </step>
      <step>
        <para>Set the <envar>KUBECONFIG</envar> environment variable for the
          same user that installed K3s:
        </para>
        <screen>export KUBECONFIG=/etc/rancher/k3s/k3s.yaml</screen>
      </step>
      <step xml:id="st-deploy-k3s">
        <para>
          With the same user that installed K3s, install &t.server; by pulling the Helm chart
          using Helm:
        </para>
        <screen>helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable></screen>
       <para>
          When using a Helm version lower than 3.8.0, a experimental flag must be set before the helm command:
        </para>
         <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable></screen>
      </step>
       <step>
        <para> Monitor the creation and start-up of the &t.server; pods and wait until they are all ready and running:</para>
        <screen>watch kubectl get pods</screen>
      </step>
       <step>
        <para> Log out of the &t.server; host. </para>
      </step>
      <step>
        <para> To verify that the &t.server; installation was
          successful, open the URL of the &t.web;
          (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>)
          from a workstation located in the &sap; administrator's LAN. </para>
      </step>
    </procedure>

    </section>

    <section xml:id="sec-trento-install-trentoserver-on-sles-for-sap15">
      <title>Installing &t.server; on K3s running on &sles4sap;&nbsp;15</title>
      <para>
        If you choose to deploy K3s on a VM with a registered &sles4sap;&nbsp;15 distro,
        you can install the package <filename>trento-server-installer</filename> and
        then execute script <filename>install-trento-server</filename>:
        it will run <xref linkend="st-install-k3s"/> to
        <xref linkend="st-deploy-k3s"/> in
        <xref linkend="pro-trento-manually-installing"/> for you automatically.
      </para>
    </section>

    <section xml:id="sec-trento-deploying-trento-on-selected-nodes">
      <title>Deploying &t.server; on selected nodes</title>
      <remark>toms 2022-09-09: </remark>
      <para>
        If you use a multi node &k8s; cluster, it is possible to deploy
        &t.server; images on selected nodes by specifying the field
        <parameter>nodeSelector</parameter> in the helm upgrade command,
        with the following syntax:</para>
      <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set prometheus.server.nodeSelector.<replaceable>LABEL</replaceable>=<replaceable>VALUE</replaceable> \
   --set postgresql.primary.nodeSelector.<replaceable>LABEL</replaceable>=<replaceable>VALUE</replaceable> \
   --set trento-web.nodeSelector.<replaceable>LABEL</replaceable>=<replaceable>VALUE</replaceable> \
   --set trento-runner.nodeSelector.<replaceable>LABEL</replaceable>=<replaceable>VALUE</replaceable> \
   --set grafana.nodeSelector.<replaceable>LABEL</replaceable>=<replaceable>VALUE</replaceable></screen>
    </section>

    <section xml:id="sec-trento-enabling-email-alerts">
      <title>Enabling email alerts</title>
      <para>
        Email alerting feature notifies the &sap; administrator about important changes
        in the &sap; Landscape being monitored/observed by Trento.
      </para>
      <para>
        Some of the reported events are:
      </para>
      <itemizedlist>
        <listitem>
          <para>Host heartbeat failed</para>
        </listitem>
        <listitem>
          <para>
            Cluster health detected critical
          </para>
        </listitem>
        <listitem>
          <para>
            Database health detected critical
          </para>
        </listitem>
        <listitem>
          <para>&sap; System health detected critical</para>
        </listitem>
      </itemizedlist>
      <para>
        This feature is disabled by default. It can be enabled at installation time or
        anytime at a later stage.
        In both cases, the procedure is the same and uses the following placeholders:
      </para>
      <variablelist>
        <varlistentry>
          <term><replaceable>SMTP_SERVER</replaceable></term>
          <listitem>
            <para>The SMTP server designated to send alerting emails.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>SMTP_PORT</replaceable></term>
          <listitem>
            <para>The port on the SMTP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>SMTP_USER</replaceable></term>
          <listitem>
            <para>User name to access SMTP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>SMTP_PASSWORD</replaceable></term>
          <listitem>
            <para>Password to access SMTP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>ALERTING_SENDER</replaceable></term>
          <listitem>
            <para>Sender email for alerting notifications.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>ALERTING_RECIPIENT</replaceable></term>
          <listitem>
            <para>Recipient email for alerting notifications.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        The command to enable email alerting is the following:
      </para>
      <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set trento-web.alerting.enabled=true \
   --set trento-web.alerting.smtpServer=<replaceable>SMTP_SERVER</replaceable> \
   --set trento-web.alerting.smtpPort=<replaceable>SMTP_PORT</replaceable> \
   --set trento-web.alerting.smtpUser=<replaceable>SMTP_USER</replaceable> \
   --set trento-web.alerting.smtpPassword=<replaceable>SMTP_PASSWORD</replaceable> \
   --set trento-web.alerting.sender=<replaceable>ALERTING_SENDER</replaceable> \
   --set trento-web.alerting.recipient=<replaceable>ALERTING_RECIPIENT</replaceable></screen>
    </section>

    <section xml:id="sec-trento-enabling-ssl">
      <title>Enabling SSL</title>
      <para> Ingress may be used to provide SSL termination for the web
        component of &t.server;. This would allow to encrypt the communication from
        the agent to the server, which is already secured by the corresponding
        API key. It would also allow HTTPS access to the web console with trusted certificates.
      </para>
      <para>
        Configuration must be done in the tls section of the <filename>values.yaml</filename>
        file of the chart of the &t.server; web component.
      </para>
      <para> For details on the required Ingress setup and configuration,
        refer to: <link
          xlink:href="https://kubernetes.io/docs/concepts/services-networking/ingress/"
         />. Particularly, refer to section <link
          xlink:href="https://kubernetes.io/docs/concepts/services-networking/ingress/#tls"
         /> for details on the secret format in the YAML configuration file.
      </para>
      <para>
        Additional steps are required on the Agent side.
        <remark>toms 2022-09-14: which steps?</remark>
      </para>
    </section>
  </section>

  <section xml:id="sec-trento-installing-trentoagent">
    <title>Installing &t.agent;s</title>
    <important>
      <title>Expect changes in the installation procedure</title>
      <para>
        The product is under active development. Expect changes in the described
        installation procedure.
      </para>
    </important>

    <para>
      Before you can install a &t.agent;, retrieve the API key of your &t.server;.
      Proceed as follows:
    </para>
    <procedure>
      <step>
        <para>
          Open the URL of the Trento web console (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>).
          It prompts you for a user name and password:
        </para>
        <!-- add login of Trento Server -->
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="trento-web-login.png" width="30%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
      </step>
      <step>
        <para>Enter the credentials for the <systemitem class="username">admin</systemitem> user
          (established when installing &t.server;).</para>
      </step>
      <step>
        <para>Click <guimenu>Login</guimenu>. As this is the first time you access the console,
          you will be prompted to accept the license agreement. Click <guimenu>Accept</guimenu> to continue.
          Otherwise, you cannot use Trento.</para>
      </step>
      <step>
        <para>Once inside the console, go to Settings:</para>
        <!-- Add API key screen -->
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="trento-settings-apikey.png" width="80%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
      </step>
      <step>
        <para>Click the <guimenu>Get your key now!</guimenu> button.</para>
      </step>
      <step>
        <para>Write down the API key.</para>
      </step>
    </procedure>
    <para>
      To install the &t.agent; on an SAP host and register it
      with the &t.server;, repeat the steps in <xref linkend="pro-trento-installing-trentoagent"/>:
    </para>
    <procedure xml:id="pro-trento-installing-trentoagent">
      <title>Installing &t.agent;s</title>
      <step>
        <para>
          Install the package:
        </para>
        <screen>&prompt.user;sudo zypper ref
&prompt.user;sudo zypper install trento-agent</screen>
      </step>
      <step>
        <para>
          Open the configuration file <filename>/etc/trento/agent.yml</filename>
          and uncomment (use <literal>#</literal>) the entries for
          <parameter>facts-service-url</parameter>, <parameter>server-url</parameter> and
          <parameter>api-key</parameter>. Update the values appropriately:
        </para>
        <itemizedlist>
          <listitem>
            <para><parameter>facts-service-url</parameter>: the address of the AMQP service shared with the checks engine, where fact gathering requests are received.
           The right syntax is <uri>amqp://trento:trento@<replaceable>TRENTO_SERVER_HOSTNAME</replaceable>:5672</uri>.</para>
          </listitem>
          <listitem>
            <para><parameter>server-url</parameter>: URL for the Trento Server (<uri>http://TRENTO_SERVER_HOSTNAME</uri>)
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>api-key</parameter>: the API key retrieved from the Web console
            </para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>
          If SSL termination has been enabled on the server side (refer to
          <xref linkend="sec-trento-enabling-ssl"/>), you can encrypt the
          communication from the agent to the server as follows:</para>
        <itemizedlist>
          <listitem>
            <para>Provide an HTTPS URL instead of an HTTP one.</para>
          </listitem>
          <listitem>
            <para>Import the certificate from the CA that has issued your
              &t.server; SSL certificate into the &t.agent; host as follows:</para>
            <procedure>
              <step>
                <para>Copy the CA certificate in PEM format to <filename>/etc/pki/trust/anchors/</filename>.
                If your CA certificate is in CRT format, convert it to PEM using the <command>openssl</command>
                  command as follows:
                </para>
                <screen><command>openssl</command> x509 -in mycert.crt -out mycert.pem -outform PEM</screen>
              </step>
              <step>
                <para>Run the <command>update-ca-certificates</command> command.</para>
              </step>
            </procedure>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>
          Start the &t.agent;:
        </para>
        <screen>&prompt.user;sudo systemctl enable --now trento-agent</screen>
      </step>
      <step>
        <para>Check the status of the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl status trento-agent
● trento-agent.service - &t.agent; service
     Loaded: loaded (/usr/lib/systemd/system/trento-agent.service; enabled; vendor preset: disabled)
     Active: active (running) since Wed 2021-11-24 17:37:46 UTC; 4s ago
   Main PID: 22055 (trento)
      Tasks: 10
     CGroup: /system.slice/trento-agent.service
             ├─22055 /usr/bin/trento agent start --consul-config-dir=/srv/consul/consul.d
             └─22220 /usr/bin/ruby.ruby2.5 /usr/sbin/SUSEConnect -s

[...]</screen>
      </step>
      <step>
        <para> Repeat this procedure in all SAP hosts that you want to monitor. </para>
      </step>
    </procedure>
  </section>


  <!--
  Split section sec-trento-webconsole in two sections:

  1. Configuration:
     Where we describe the different configuration options currently available in the console.
     Particularly:
     - cluster settings (we can reutilize the existing content)
     - tags on overviews (hosts, clusters, sap systems, HANA databases)
  2. Use cases:
     dashboard description (we can reutilize the exiting content)
     - what to do when host status is not green
     - what to do when pacemaker cluster status is not green
     - what to do when database status is not green
     - what to do wen SAP instances status is not green
  -->
  <section xml:id="sec-trento-checks">
    <title>Performing configuration checks</title>
    <para>
      One of Trento's main features is to provide checks for the HANA scale-up performance optimized two-node clusters in your SAP Landscape.
      To run these checks, proceed as follows:
    </para>
    <procedure xml:id="pro-trento-checks">
      <title>Performing configuration checks</title>
      <step>
        <para>Log in to Trento</para>
      </step>
      <step>
        <para>In the left panel, click <guimenu>Cluster</guimenu>.</para>
      </step>
      <step>
        <para>In the list, search for an &hana; cluster.</para>
      </step>
      <step>
        <para>Click the respective cluster name in the <guimenu>Name</guimenu> column.
          The <guimenu>Details</guimenu> view opens.</para>
        <remark>tom 2023-01-16: screenshot</remark>
        <figure>
          <title>&pace; cluster details</title>
          <mediaobject>
            <imageobject>
              <imagedata width="80%" fileref="trento-web-pacemaker-cluster-details-view.png"/>
            </imageobject>
          </mediaobject>
        </figure>
      </step>
      <step xml:id="st-trento-checks-settings">
        <para>Click the <guimenu>Settings</guimenu> button to change the cluster settings of the respective cluster. 
          For checks to be executed, a checks selection must be made. Select the checks to be executed and click the button <guimenu>Select Checks for Execution</guimenu>.
          See <xref linkend="fig-pacemaker-clustersettings-checks"/>:
        </para>
        <figure xml:id="fig-pacemaker-clustersettings-checks">
          <title>&pace; Cluster Settings&mdash;Checks Selection</title>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pacemaker-clustersettings-checks.png" />
                </imageobject>
              </mediaobject>
            </figure>
      </step>
      <step>
        <para>
          At this moment, you can either wait for Trento to execute the selected checks or trigger an execution
          immediately by clicking the button that has appeared in the Checks Selection tab.
          <remark>tom 2023-01-16: Why is this a two-step process?</remark>
        </para>
      </step>
      <step>
        <para>
          Investigate the result in the Checks Results view. Each row in this view shows you a check ID,
          a short description of the check and the check execution result. By clicking on a row, a section will open
         providing information about the execution on each node of the cluster. See <xref linkend="fig-pacemaker-checkresult"/>:
        </para>
        <figure xml:id="fig-pacemaker-checkresult">
          <title>Check results for a cluster</title>
          <mediaobject>
            <imageobject>
              <imagedata width="70%" fileref="trento-web-checkresult.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>
          The result of a check execution can be passing, warning or critical:
        </para>
        <itemizedlist>
          <listitem>
            <para><emphasis>Passing</emphasis> means that the checked configuration meets the
              recommendation.</para>
          </listitem>
          <listitem>
            <para><emphasis>Warning</emphasis> means that the recommendation is not met but the
              configuration is not critical for the proper running of the
              cluster.</para>
          </listitem>
          <listitem>
            <para><emphasis>Critical</emphasis> means that either the execution itself errored (for
              example, a timeout) or the recommendation is not met and is
              critical for the well-being of the cluster.</para>
          </listitem>
        </itemizedlist>
        <para>
          Use the filter to reduce the list to only show, for example, critical results.
        </para>
      </step>
      <step>
        <para>
          Click a check's link to open the <guimenu>Details</guimenu> view of this check. This shows you
          an abstract and how to remedy the problem. The <guimenu>References</guimenu> section contains links to the documentation
          of the different vendors to provide more context when necessary.
          Close the view with the <keycap function="escape"/> key or click outside of the view.
        </para>
        <para>
         For each not-met expectation, there will be a detailed view providing information about it: what facts were gathered,
         what values were expected and what was the result of the evaluation. This will help users understand better why a
         certain configuration check is failing: 
        </para>
        <figure xml:id="fig-non-met-expectation-detail">
          <title>Non-met expectation detail view</title>
          <mediaobject>
            <imageobject>
              <imagedata width="70%" fileref="trento-web-nonmetexpectation.png"/>
            </imageobject>
          </mediaobject>
        </figure>
      </step>
    </procedure>
    <para>
      Once a check selection for a given cluster has been made, Trento executes them
      automatically every five minutes, and results are updated accordingly. A check
      execution result icon spinning means that an execution is running.
    </para>
  </section>

  <section xml:id="sec-trento-use-webconsole">
    <title>Using &t.web;</title>
    <para>
      When you access the Trento web console for the first time, it asks
      to accept the license. Click <guimenu>Accept</guimenu> to continue.
    </para>
    <para>
      After you have accepted the license, Trento can be used.
      The left sidebar in the &t.web; contains the following entries: </para>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title><guimenu>Dashboard</guimenu></title>
          <para> Determine at a glance the health status of your &sap;
            environment.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Hosts</guimenu></title>
          <para>Overview of all registered hosts running the &t.agent;.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Clusters</guimenu></title>
          <para>Overview of all discovered &pace; clusters.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>&sap; Systems</guimenu></title>
          <para>Overview of all discovered &sap; Systems; identified by the
            corresponding system IDs.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>HANA Databases</guimenu></title>
          <para>Overview of all discovered &hana; databases; identified by
            the corresponding system IDs. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Checks catalog</guimenu></title>
          <para>Overview of the catalog of configuration checks that Trento may
            perform for the different cluster components (&pace;, &corosync;,
            SBD, etc.) in any of the supported platforms: Azure, AWS, GCP, or on-premise bare metal (default). </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Settings</guimenu></title>
          <para>
           Lets you retrieve the API key for this particular installation, which is required for the &t.agent; configuration.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>About</guimenu></title>
          <para>Shows the Trento flavor, the current server version, a link to
            the GitHub repository of the Trento web component, and the number of
            registered &sles4sap;&nbsp;subscriptions that has been discovered. </para>
        </formalpara>
      </listitem>
    </itemizedlist>

    <section xml:id="sec-trento-health">
      <title>Getting the global health state</title>
      <para>
        The dashboard allows you to determine at a glance the health status of your &sap; environment.
        It is the home page of the Trento web console, and you can go back to it any time by clicking on <guimenu>Dashboard</guimenu> in the left sidebar.
      </para>
      <para>
        The health status of a registered &sap; system is the compound of its health status at
        four<remark>tom 2023-01-16: really? In former times, we had a grey state, but it seems it vanished.</remark>
        different layers, which are a reflection of the &sap; architecture:
      </para>
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guimenu>Hosts</guimenu>:</title>
            <para>it reflects the heartbeat of the &t.agent;.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>&pace; Clusters</guimenu>:</title>
            <para>the status here is based on the running status of the cluster and the results
              of the configuration checks.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>Database</guimenu>:</title>
            <para>it collects the status of the HANA instances as returned by <command>sapcontrol</command>.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>SAP instances</guimenu>:</title>
            <para>it summarizes the status of the ABAP instances as returned by <command>sapcontrol</command>.</para>
          </formalpara>
        </listitem>
      </itemizedlist>

      <para>
        The dashboard groups systems in three different health boxes (see <xref linkend="fig-trento-web-home"/>):
      </para>
      <figure xml:id="fig-trento-web-home">
        <title>Dashboard with the global health state</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-home.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <variablelist xml:id="vl-health-states">
        <title>The three different health states</title>
        <varlistentry>
          <term><guimenu>Passing</guimenu></term>
          <listitem>
            <para>
              It shows the number of systems with all layers in passing (green) status.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guimenu>Warning</guimenu></term>
          <listitem>
            <para>
              It shows the number of systems with at least one layer in warning (yellow) status and the rest in passing (green) status.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guimenu>Critical</guimenu></term>
          <listitem>
            <para>
              It shows the number of systems with at least one layer in critical (red) status.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
<para>
The health boxes in the dashboard are clickable. By clicking on one particular box, you filter the dashboard by systems with the corresponding health status. In large SAP environments, this feature facilitates the SAP administrator knowing which systems are in a given status. 
</para>
      <para>
        The icons representing the health summary of a particular layer contain links to the views in the Trento console that can help determine where an issue is coming from:
      </para>
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guimenu>Hosts health icon</guimenu>:</title>
            <para>Link to the Hosts overview, filtered by SID equal to the SAPSID and the DBSID of the corresponding SAP system.</para>
          </formalpara>
         </listitem>
         <listitem>
          <formalpara>
            <title><guimenu>Cluster health icon</guimenu>:</title>
            <para>Link to the corresponding &pace; Cluster Details view.</para>
          </formalpara>
         </listitem>
         <listitem>
          <formalpara>
            <title><guimenu>Database health icon</guimenu>:</title>
            <para>Link to the corresponding HANA Database Details view.</para>
          </formalpara>
         </listitem>
         <listitem>
          <formalpara>
            <title><guimenu>SAP Instances health icon</guimenu>:</title>
            <para>Link to the corresponding SAP System Details view.</para>
          </formalpara>
         </listitem>
       </itemizedlist> 

      <remark>tom 2023-01-16: Do we still have a grey state?</remark>
      <para>
        A grey status is returned when either a component does not exist, or it is stopped
        (as returned by <command>sapcontrol</command>), or its status is unknown (for instance,
        if a command to determine the status fails).
      </para>
      <para> Grey statuses are not yet counted in the calculation of the global health status.</para>

    </section>

    <section xml:id="sec-trento-status">
      <title>Viewing the status</title>
      <para>
        Getting to know the status of a system is an important task for every
        administrator. The status allows you to see if some of your systems need
        to be examined further.
      </para>
      <para>
        The following subsection gives you an overview of specific parts of your
        SAP Landscape to show their state. Each status site shows you an overview of
        the health states (see details in <xref linkend="vl-health-states"/>).
      </para>

      <section xml:id="sec-trento-status-hosts">
        <title>Viewing the status of hosts</title>
        <para>To display the lists of registered hosts and their details, proceed as follows:</para>
        <procedure>
          <step>
            <para>Log in to the &t.web;.</para>
          </step>
          <step>
            <para>Click the <guimenu>Hosts</guimenu> entry in the left sidebar to show a summary
              of the state for all hosts (see <xref linkend="fig-trento-status-hosts"/>).
            </para>
            <figure xml:id="fig-trento-status-hosts">
              <title>Hosts entry</title>
              <mediaobject>
                <imageobject>
                  <imagedata width="80%" fileref="trento-web-hosts-view.png" />
                </imageobject>
              </mediaobject>
            </figure>
          </step>
          <step>
            <para>
              To investigate the specific host details, click the host name in the respective column
              to open the corresponding <guimenu>Host details</guimenu> view.
              If the list is too big, reduce the list by providing filters.
            </para>
            <para>
              Clicking on a host name opens the corresponding <guimenu>Host details</guimenu> view.
              This view provides the following:
            </para>
            <itemizedlist xml:id="lst-trento-web-hosts-details">
              <title><guimenu>Host details</guimenu> view</title>
              <listitem>
                <para><guimenu>Hosts details</guimenu> section: it shows the
                  status of both the &t.agent; and the Node Exporter and
                  provides the host name, the cluster name (when applicable) and
                  the &t.agent; version. </para>
              </listitem>
              <listitem>
                <para>
                  <guimenu>Monitoring dashboard</guimenu>: it shows the CPU and
                  Memory usage for the specific hosts. </para>
                <informalfigure>
                  <mediaobject>
                    <imageobject>
                      <imagedata width="80%"
                        fileref="trento-web-hosts-dashboard-cpu-memory.png" />
                    </imageobject>
                  </mediaobject>
                </informalfigure>
              </listitem>
              <listitem>
                <para><guimenu>Provider details</guimenu> section: when applicable,
                  it shows the name of the cloud provider, the name of the virtual machine,
                  the name of the  resource group it belongs to, the location, the size of the
                  virtual machine, and other information. </para>
              </listitem>
              <listitem>
                <para><guimenu>&sap; instances</guimenu> section: when applicable,
                  it lists the ID, SID, type, features, and instance number of any &sap;
                  instance running on the host (&netweaver; or &hana;).</para>
              </listitem>
              <listitem>
                <para><guimenu>&suse; subscription details</guimenu> section: it
                  lists the different components or modules that are part of the
                  subscription, and for each one of them, it provides the
                  architecture, the version and type, the registration and
                  subscription status as well as the start and end dates of the
                  subscription. </para>
              </listitem>
            </itemizedlist>
          </step>
        </procedure>
      </section>
      <section xml:id="sec-trento-status-pacemakerclusters">
        <title>Viewing the &pace; cluster status</title>
        <para>
          To display a list of all available &pace; clusters and their details, proceed as follows:
        </para>
        <procedure>
          <step>
            <para>Log in to the &t.web;.</para>
          </step>
          <step>
            <para>Click the <guimenu>Clusters</guimenu> entry in the left sidebar to show a summary
              of the state for all &pace; clusters (see <xref linkend="fig-trento-status-pacemakerclusters"/>).
            </para>
            <figure xml:id="fig-trento-status-pacemakerclusters">
              <title>&pace; clusters</title>
              <mediaobject>
                <imageobject>
                  <imagedata width="80%" fileref="trento-web-pacemaker-view.png" />
                </imageobject>
              </mediaobject>
            </figure>
          </step>
          <step>
            <para>
              To investigate the specific &pace; cluster details, click the cluster name in the
              respective column to open the corresponding <guimenu>&pace; cluster details</guimenu> view.
              If the list is too big, reduce the list by providing filters.
            </para>
            <para> The detail views of a HANA scale-up cluster and an ASCS/ERS cluster are different: </para>
            <itemizedlist>
              <title><guimenu>HANA cluster details</guimenu> view</title>
              <listitem>
                <para>The <guimenu>Settings</guimenu>, <guimenu>Show
                    Results</guimenu>, and <guimenu>Start Execution</guimenu> buttons.
                  These buttons are used to enable or disable checks and to start
                  them. If you want to perform specific checks, proceed with
                    <xref linkend="st-trento-checks-settings" /> of <xref
                    linkend="pro-trento-checks" />. </para>
              </listitem>
              <listitem>
                <para>
                  The cloud provider, the cluster type, HANA log, SID (when applicable), SAPHanaSR health state,
                  HANA secondary sync state, fencing type, when the CIB was last written,
                  and HANA log operation mode.
                </para>
              </listitem>
              <listitem>
                <para><guimenu>Check Result</guimenu> section: with a summary of
                  the health of the clusters based on the runtime status and the
                  selected configuration checks for each one of them (passed, warning and
                  critical).
                </para>
              </listitem>
              <listitem>
                <para><guimenu>Stopped resources</guimenu> section: with a summary
                of resources which have been stopped on the cluster.
                </para>
              </listitem>
              <listitem>
                <para><guimenu>&pace; Site details</guimenu> section: with a summary of
                  NBG and WDF<remark>tom 2023-01-16: what are these acronyms</remark>.
                  Both list the host name, their role, the IP and virtual IP address.
                  If you click the <guimenu>Details</guimenu>, you can view the attributes
                  of the site and their resources. Close this view with the <keycap
                    function="escape"/> key.
                </para>
              </listitem>
              <listitem>
                <para><guimenu>SBD/Fencing</guimenu> section: with a status and the SBD device.</para>
              </listitem>
            </itemizedlist>
                       <itemizedlist>
              <title><guimenu>ASCS/ERS cluster details</guimenu> view</title>
              <listitem>
                <para>The <guimenu>Settings</guimenu>, <guimenu>Show
                    Results</guimenu>, and <guimenu>Start Execution</guimenu> buttons.
                  These buttons are used to enable or disable checks and to start
                  them. If you want to perform specific checks, proceed with
                    <xref linkend="st-trento-checks-settings" /> of <xref
                    linkend="pro-trento-checks" />. </para>
              </listitem>
              <listitem>
                <para>
                  A section showing the cloud provider, the cluster type, fencing type and when the CIB was last written.
                </para>
              </listitem>
              <listitem>
                <para>
                  Another section showing the SAP SID, the Enqueue Server version, whether the ASCS and ERS are running
                 on different hosts or not and whether the instance filesystems are resource based or not. This is a multi-tab
                 section. When multiple systems share the same cluster, there will be a tab for each system in the cluster and
                 you can scroll left and right to go through the different systems.
                </para>
              </listitem>                        
              <listitem>
                <para>A <guimenu>Check Result</guimenu> section, which is disabled at the moment because we don't have yet
                 configuration checks for this type of clusters. 
                </para>
              </listitem>
              <listitem>
                <para>A <guimenu>Stopped resources</guimenu> section: with a summary
                of resources which have been stopped on the cluster.
                </para>
              </listitem>
              <listitem>
                <para>A <guimenu>Node details</guimenu> section showing the following for each
                 node in the cluster: the host name, the role, the virtual IP address and, in case of 
                 resource managed filesystems, the full mounting path. If you click on <guimenu>Details</guimenu>,
                 you can view the attributes and resources associated to that particular role. Close this view with
                 the <keycap function="escape"/> key.</para> 
                 <para>
                  This section is system specific. It will show the information corresponding to the system selected
                  in the multi-tab section above. 
                </para>
              </listitem>
              <listitem>
                <para><guimenu>SBD/Fencing</guimenu> section: with a status and a list of the SBD decices.</para>
              </listitem>
            </itemizedlist>
          </step>
        </procedure>
      </section>
      <section xml:id="sec-trento-status-sapsystems">
        <title>Viewing the SAP Systems status</title>
        <para>
          To display a list of all available SAP Systems and their details, proceed as follows:
        </para>
        <procedure>
          <step>
            <para>Log in to the &t.web;.</para>
          </step>
          <step>
            <para>
              To investigate the specific SAP Systems details, click the <guimenu>SAP Systems</guimenu>
              entry in the left sidebar to show a summary of the state for all SAP Systems
              (see <xref linkend="fig-trento-status-sapsystems"/>).
            </para>
            <figure xml:id="fig-trento-status-sapsystems">
              <title>&sap; Systems</title>
              <mediaobject>
                <imageobject>
                  <imagedata width="70%" fileref="trento-web-sapsystems-view.png" />
                </imageobject>
              </mediaobject>
            </figure>
          </step>
          <step>
            <para>
              Decide which part you want to examine. You can view the details of the <guimenu>SID</guimenu>
              column of an entry, or you go with <guimenu>Attached RDBMS</guimenu> to see the details
              of the database.
              If the list is too big, reduce the list by providing filters.
            </para>
            <para>
              If you click on an entry in the <guimenu>SID</guimenu> column, the <guimenu>SAP System Details</guimenu>
              view opens. This view provides the following: </para>
            <itemizedlist xml:id="lst-trento-web-sapsystems-details">
              <title>&sap; System details</title>
              <listitem>
                <para>The <guimenu>Name</guimenu> and <guimenu>Type</guimenu> of
                  this &sap; System.</para>
              </listitem>
              <listitem>
                <para>
                  <guimenu>Layout</guimenu> section: for each
                  instance, virtual host name, instance number, features
                  (processes), HTTP and HTTPS ports, start priority, and
                  SAPControl status. </para>
              </listitem>
              <listitem>
                <para>
                  <guimenu>Hosts</guimenu> section: with the host name, the IP
                  address, the cloud provider (when applicable), the cluster
                  name (when applicable), and the &t.agent; version for each
                  listed host. When you click the host name, it takes you to the
                  corresponding <xref linkend="lst-trento-web-hosts-details" />.
                </para>
              </listitem>
            </itemizedlist>
            <figure>
              <title>&sap; System Details</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="trento-web-sapsystemsdetails-view.png"
                    width="80%" />
                </imageobject>
              </mediaobject>
            </figure>
          </step>
        </procedure>
      </section>
      <section xml:id="sec-trento-status-hanadatabases">
        <title>Viewing the &hana; database status</title>
        <para>
          To display a list of all available &hana; databases and their details, proceed as follows:
        </para>
        <procedure>
          <step>
            <para>Log in to the &t.web;.</para>
          </step>
          <step>
            <para>
              Click the <guimenu>HANA databases</guimenu> entry in the left sidebar to show a summary
              of the state for all &hana; databases (see <xref linkend="fig-trento-status-hanadb"/>).
            </para>
            <figure xml:id="fig-trento-status-hanadb">
              <title>HANA databases</title>
              <mediaobject>
                <imageobject>
                  <imagedata width="80%" fileref="trento-web-hanadb-view.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </step>
          <step>
            <para>
              To investigate the specific &hana; database details, click the respective name in the
              <guimenu>SID</guimenu> column to open the corresponding
              <guimenu>HANA Database details</guimenu> view.
              If the list is too big, reduce the list by providing filters.
            </para>
            <para> Clicking on one of the <guimenu>SID</guimenu>s opens the
                <guimenu>HANA Databases</guimenu> detail view. This view
              provides the following: </para>
            <itemizedlist xml:id="lst-trento-web-hanadatabases-details">
              <title><guimenu>HANA Database</guimenu> details view</title>
              <listitem>
                <para>The <guimenu>Name</guimenu> and <guimenu>Type</guimenu> of
                  this &sap; System.</para>
              </listitem>
              <listitem>
                <para>
                  <guimenu>Layout</guimenu> section: lists all related &hana;
                  instances with their corresponding virtual host name, instance
                  number, features (roles), HTTP/HTTPS ports, start priorities,
                  and SAPControl status. </para>
              </listitem>
              <listitem>
                <para>
                  <guimenu>Hosts</guimenu> section: lists the hosts where all
                  related instances are running. For each host, it
                  provides the host name, the local IP address(es), the cloud
                  provider (when applicable), the cluster name (when
                  applicable), the system ID, and the &t.agent; version. </para>
                <para> Clicking on a host name takes you to the corresponding
                    <xref linkend="lst-trento-web-hosts-details" />. </para>
              </listitem>
            </itemizedlist>
            <figure>
              <title>HANA Database details</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="trento-web-hana-database-details-view.png"
                    width="70%" />
                </imageobject>
              </mediaobject>
            </figure>
          </step>
        </procedure>
      </section>
    </section>

    <section xml:id="sec-trento-cleanup-hosts">
      <title>Cleaning up hosts</title>
     <para> 
    When the heartbeat of an agent fails, an option to clean-up the corresponding host will show up both in the 
    <guimenu>Hosts</guimenu> overview and the corresponding <guimenu>Host details</guimenu> view.
     </para>
           <figure>
              <title>Clean up button in <guimenu>Hosts</guimenu> overview</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="trento-cleanup-hosts-overview.png"
                    width="70%" />
                </imageobject>
              </mediaobject>
            </figure>
                 <figure>
              <title>Clean up button in <guimenu>Host details</guimenu> view</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="trento-cleanup-host-details-view.png"
                    width="70%" />
                </imageobject>
              </mediaobject>
            </figure>
      <para>When the user clicks on the cleanup button, a box will open asking for confirmation.
       If the user grants it, all the components discovered by the agent in that particular host, including the host
       itself and other components that might depend on the ones running on the host, will be removed from the console.
       For example, if the user cleans up the host where the primary application server of an SAP System is registered,
       the entire SAP System will be removed from the console.
      </para>
    </section>
     
   
    <section xml:id="sec-trento-manage-tags">
      <title>Managing tags</title>
      <para>
       Tags are a means to label specific objects with a purpose, location, owner, or any other
       property you like. Such objects can be hosts, clusters, databases, or SAP systems.
       Tags make it easier to distinguish and show all these different objects, making
       your lists more readable and searchable. You can use any text you like to create
       your tags except blank spaces and special characters other than + - = . , _ : and @.
      </para>
      <para>
        The following subsection shows how you can add, remove, and filter objects based on
        your tags.
      </para>
      <section xml:id="sec-trento-add-tags">
        <title>Adding tags to hosts, clusters, databases, and SAP Systems</title>
        <para>
          To add one or more tags to your objects, do the following:
        </para>
        <procedure>
          <step>
            <para>
              Log in to Trento.
            </para>
          </step>
          <step>
            <para>
              In the Trento dashboard, go to the overview corresponding to the object for which you want to create tags. For example, the <guimenu>Hosts</guimenu> overview.
            </para>
          </step>
          <step>
            <para>
              In the <guimenu>Hosts</guimenu> overview, search for the host you want to add a tag to.
            </para>
          </step>
          <step>
            <para>
              In the <guimenu>Tags</guimenu> column, click the <guimenu>Add Tag</guimenu> entry.
            </para>
          </step>
          <step>
            <para>Enter the respective tag and finish with <keycap function="enter"/>.
            </para>
          </step>
          <step>
            <para>
              Repeat this procedure to assign as many tags as you want. It can be on the same
              or on a different host.
            </para>
          </step>
        </procedure>
        <para>
          After you have finished the above procedure, the changed host contains one or
          more tags.
        </para>
        <para>
          The same principle applies to other objects in Trento, be it <guimenu>Clusters</guimenu>,
          <guimenu>SAP Systems</guimenu>, or <guimenu>HANA Databases</guimenu>.
        </para>
      </section>

      <section xml:id="sec-trento-remove-tags">
        <title>Removing tags</title>
        <para>
          If you want to remove existing tags, click the respective part in the dashboard:
        </para>
        <procedure>
          <step>
            <para>
              Log in to Trento.
            </para>
          </step>
          <step>
<para>
In the Trento dashboard, go to the overview corresponding to the object for which you want to remove tags. For example, the <guimenu>Hosts</guimenu> overview.
</para>
          </step>
          <step>
            <para>
              In the <guimenu>Hosts</guimenu> overview, search for the host you want to remove a tag from.
            </para>
          </step>
          <step>
            <para>
              In the <guimenu>Tags</guimenu> column, click the <guimenu>×</guimenu> icon to remove
              the tag.
            </para>
          </step>
          <step>
            <para>
              Repeat this procedure to remove as many tags as you want. It can be on the same
              or on a different host.
            </para>
          </step>
        </procedure>
      </section>

      <section xml:id="sec-trento-filter-tags">
        <title>Filter tags</title>
        <para>
          With tags, you can show only those objects you are interested in. For example, if
          you have created a <literal>drbd</literal> tag for some hosts, you can show only
          those hosts that have this <literal>drbd</literal> tag assigned.
        </para>
        <procedure>
          <step>
            <para>
              In the Trento dashboard, go to the respective overview you are interested in.
            </para>
          </step>
          <step>
            <para>
              Make sure you have already assigned some tags. If not, refer to <xref linkend="sec-trento-add-tags"/>.
            </para>
          </step>
          <step>
            <para>
              In the second row, click the last drop-down list with the name <guimenu>Filter tags</guimenu>.
              The drop-down list opens and shows you all of your defined tags.
            </para>
          </step>
          <step>
            <para>
              Select the tag you want to filter from the drop-down list.
              It is possible to select more than one tag.
            </para>
          </step>
        </procedure>
        <para>
          After you have finished the above procedure, Trento shows all respective hosts that
          contain one or more of your selected tags.
        </para>
        <para>
          To remove the filter, click the <guimenu>×</guimenu> icon from the same drop-down list.
        </para>
      </section>
    </section>

  </section>


<!--
  <section xml:id="sec-trento-webconsole-">
    <title>Using &t.web;</title>
    <remark>toms 2021-12-13: this section is a bit too referential and needs
      more focus on the user. As discussed with Alberto, we keep it for
      the time being and change it after the release. </remark>
    <para>
      When you access the Trento web console for the first time, it asks
      to accept the license. Click <guimenu>Accept</guimenu> to continue.
    </para>
    <para>
      After you have accepted the license, Trento can be used.
      The left sidebar in the &t.web; contains the following entries: </para>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title><guimenu>Dashboard</guimenu></title>
          <para> Determine at a glance the health status of your &sap;
            environment.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Hosts</guimenu></title>
          <para>Overview of all registered hosts running the &t.agent;.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Clusters</guimenu></title>
          <para>Overview of all discovered &pace; clusters.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>&sap; Systems</guimenu></title>
          <para>Overview of all discovered &sap; Systems; identified by the
            corresponding system IDs.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>HANA Databases</guimenu></title>
          <para> Overview of all discovered &hana; databases; identified by
            the corresponding system IDs. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Checks catalog</guimenu></title>
          <para> Overview of all catalog of configuration checks that Trento may
            carry out for the different cluster components (&pace;, &corosync;,
            SBD, etc.) in any of the supported platforms: Azure, AWS or GCP. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Settings</guimenu></title>
          <para>
            It lets you retrieve the API key for this particular installation.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>About</guimenu></title>
          <para> Shows the Trento flavor, the current server version, a link to
            the GitHub repository of the Trento web component, and the number of
            registered &sles4sap;&nbsp;subscriptions. </para>
        </formalpara>
      </listitem>
    </itemizedlist>
    <para> The following subsections provides an overview of Trento's
      functionality. </para>

    <section xml:id="sec-trento-web-home-page">
      <title>Dashboard</title>
      <para> The dashboard allows you to determine at a glance the Health Status of your &sap; environment.
      </para>
      <figure xml:id="fig-trento-web-home">
        <title>Dashboard</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-home.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        The Global Health section on top shows a summary of the Health Status of the registered &sap; systems.
      </para>
      <para> The Health Status of a registered &sap; system is the compound of its Health Status at four
        diferent layers, which are a reflection of the &sap; architecture:</para>
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guimenu>Hosts</guimenu>:</title>
            <para>it collects the running status of the Trento Agent and the Node Exporter.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>&pace; Clusters</guimenu>:</title>
            <para>the status here is based on the running status of the cluster and the results
              of the configuration checks.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>Database</guimenu>:</title>
            <para>it collects the status of the HANA instances as returned by <command>sapcontrol</command>.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>SAP instances</guimenu>:</title>
            <para>it summarizes the status of the ABAP instances as returned by <command>sapcontrol</command>.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
      <para>
        A grey status is returned when either a component does not exist, or it is stopped
        (as returned by <command>sapcontrol</command>), or its status is unknown (for instance
        if a command to determine the status fails).
      </para>
      <itemizedlist>
        <listitem>
          <para>
            For a system Global Health status to be Passing, all components must be in passing (green) status.
          </para>
        </listitem>
        <listitem>
          <para>
            A system with at least one component in warning (yellow) status, but no components in critical (red) status,
            will be computed as Warning in the Global Health section.
          </para>
        </listitem>
        <listitem>
          <para>
            A system with at least one component in critical (red) status, will be computed as Critical
            in the Global Health section.
          </para>
        </listitem>
      </itemizedlist>
      <para> Grey statuses are not counted in the calculation of the Global Health status.</para>
    </section>

    <section xml:id="sec-trento-web-hosts">
      <title>Hosts view</title>
      <para> To display the lists of registered hosts, click the
        <guimenu>Hosts</guimenu> entry in the left sidebar. </para>
      <figure>
        <title>Hosts entry</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-hosts.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para> This view provides the following information: </para>
      <itemizedlist>
        <listitem>
          <para> A <guimenu>Health</guimenu> section on top with a
            summary of the health status of the registered hosts.
          </para>
        </listitem>
        <listitem>
          <para>
            A <replaceable role="bold">list</replaceable> of registered host
            with the following info for each
            one of them: Health status (Passing, Warning or Critical),
            host name and local IP address(es).
            When applicable, it shows the cloud provider, the cluster name,
            and the system ID. Otherwise all fields are empty.
            The row ends with the &t.agent;'s version and custom tags that you
            can add and remove manually.
          </para>
        </listitem>
        <listitem>
          <para> Ability to <emphasis role="bold">filter</emphasis> the list by
            health status, host name, &sap; System ID, or custom tags. </para>
        </listitem>
      </itemizedlist>

      <para> Clicking on a host name opens the corresponding <guimenu>Host
        details</guimenu> view, where you can see the following: </para>
      <itemizedlist xml:id="lst-trento-web-hosts-details">
        <title>Host details view</title>
        <listitem>
          <para><guimenu>Hosts details</guimenu> section:
            it shows the status of both the &t.agent; and the Node Exporter and
            provides the host name, the cluster name (when applicable) and the
            &t.agent; version.
          </para>
          </listitem>
        <listitem>
          <para>
            <guimenu>Monitoring dashboard</guimenu>:
            it shows the CPU and Memory usage for the specific hosts.
          </para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="trento-web-hosts-dashboard-cpu-memory.png"/>
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para><guimenu>Cloud details</guimenu> section: when
            applicable, it provides the name of the virtual machine,
            the name of the resource group it belongs to, the
            location, the size of the virtual machine, and other
            information. </para>
        </listitem>
        <listitem>
          <para><guimenu>&suse; subscription details</guimenu>
            section: it lists the different components or modules
            that are part of the subscription and for each one of
            them it provides the architecture, the version and type,
            the registration and subscription status as well as the
            start and end dates of the subscription. </para>
        </listitem>
        <listitem>
          <para><guimenu>&sap; instances</guimenu> section: lists the ID, SID,
            type, features, and instance number of any &sap; instance
            running on the host (&netweaver; or &hana;).</para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="sec-trento-show-pacemaker-clusters">
      <title>Clusters</title>
      <para> To display a list of the discovered &pace; clusters, click
        the <guimenu>Clusters</guimenu> entry on the left
        sidebar. </para>
      <important>
        <para> Keep in mind that only &hana; scale-up clusters on Azure,
          AWS, or GCP are currently under consideration. </para>
      </important>
      <figure>
        <title>&pace; clusters</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%"
              fileref="trento-web-pacemaker.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para> This view provides the following: </para>
      <itemizedlist>
        <listitem>
          <para> A <guimenu>Health</guimenu> section on top
            with a summary of the health of the clusters based on the runtime
            status and the selected configuration checks for each one of them. See
            <xref linkend="lst-trento-web-cluster-details" />
            for more information. </para>
        </listitem>
        <listitem>
          <para> A <guimenu>Filters</guimenu> section to filter clusters by
            health status, cluster name, SID, type, or tags. </para>
        </listitem>
        <listitem>
          <para> A list of registered clusters with the following
            information for each one of them: status (based on
            runtime status and configuration checks), cluster name, cluster ID,
            cluster type, SID (when applicable), number of hosts, number of
            resources, and custom tags that can added/removed  manually.
          </para>
        </listitem>
      </itemizedlist>
      <para> Clicking on the name of a &hana; scale-up cluster, opens the
        corresponding <guimenu>Cluster details</guimenu> page in which we
        can find the following: </para>
      <itemizedlist xml:id="lst-trento-web-cluster-details">
        <title><guimenu>&pace; Cluster details</guimenu> view</title>
        <listitem>
          <para> A <guimenu>Settings</guimenu> button next to the
            <guimenu>&pace; Cluster details</guimenu> title which
            will open the Cluster settings window:
            <xref
              linkend="fig-trento-web-pagemaker-cluster-settings"
            />. </para>
          <figure xml:id="fig-trento-web-pagemaker-cluster-settings">
            <title><guimenu>Cluster settings</guimenu></title>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pacemaker-cluster-settings.png"
                />
              </imageobject>
            </mediaobject>
          </figure>
          <para> In this window you have two tabs: </para>
          <itemizedlist xml:id="lst-trento-web-pace-cluster-settings">
            <title><guimenu>Cluster settings</guimenu></title>
            <listitem>
              <para><guimenu>Connection settings</guimenu> tab: 
                set the user that the &t.server; will use to connect
                via SSH to the cluster nodes to perform the HA
                configuration checks.
                In this article, it is <systemitem class="username"
                  >&trentoadmin;</systemitem>.
              </para>
              <itemizedlist>
                <listitem>
                  <para>The default connection user in Azure environments
                    is the Azure admin user used to deploy the VMs.
                  </para>
                </listitem>
                <listitem>
                  <para>The default connection user in AWS and GCP is &rootuser;.</para>
                </listitem>
              </itemizedlist>
              <para>
                If you change the default connection user, you need to click on
                <guimenu>Apply Connection Settings</guimenu> to save the changes.
              </para>
              <informalfigure>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="trento-web-cluster-settings-hana_cluster.png" width="70%"/>
                  </imageobject>
                  
                </mediaobject>
              </informalfigure>
            </listitem>
            <listitem>
              <para>
                <guimenu>Checks selection</guimenu> tab:
                select/deselect a complete category of checks
                (such as &corosync; or &pace; etc.) or individual
                checks. Whenever you make a new selection of checks you need to
                click <guimenu>Select Checks for Execution</guimenu> to save the change.
              </para>
              <!-\- still change 2 -\->
            </listitem>
          </itemizedlist>
          <para>
            Whenever a change is made and saved in either tab, if any check is
            selected a button will show up allowing the user to start the check
            execution right away.
          </para>
        </listitem>
        <listitem>
          <para>
            Next to the Settings button there are two other buttons:
          </para>
          <itemizedlist>
            <listitem>
              <para>A <guimenu>Show Results</guimenu> button, shows the
                results of the last execution, if any.</para>
            </listitem>
            <listitem>
              <para>
                 A <guimenu>Start Execution</guimenu> button, enabled only
                when checks are selected and the connection settings are appropriate. By clicking this button, the user
                manually triggers the execution of the selected checks.
                In addition to manually triggered executions, Trento execute
                the selected checks every 5&nbsp;minutes.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>On the top of the details view, a section with the most relevant
            cluster attributes including &hana; system replication mode, &hana;
            system replication operation mode, SAPHanaSR health state and &hana;
            secondary sync state.</para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pagemaker-cluster-details-header.png"
                />
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para>
            When there are stopped resources in the cluster, a
            <guimenu>Stopped resources</guimenu> section listing
            which resources are in that status.
          </para>
        </listitem>
        <listitem>
          <para>A <guimenu>&pace; Site details</guimenu> section
            showing the different sites that are configured for this
            cluster. For each site, its name is displayed along with
            the host name, the role, the local IP(s), and the virtual IP.
            Clicking on the <guimenu>Details</guimenu> button on the right
            opens a <guimenu>Site details</guimenu> window where you can,
            on top, view the main attributes of the node. At the bottom you
            can see the list of resources running on it.
          </para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pacemaker-cluster-site.png"
                />
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para>A <guimenu>SBD/Fencing</guimenu> section listing the
            configured SBD devices and their location, in the case
          of Azure environments.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="sec-trento-sap-systems-view">
      <title>&sap; Systems view</title>
      <para> Click the <guimenu>&sap; Systems</guimenu> entry in the left
        sidebar to get an overview of the registered &sap; Systems: </para>
      <figure>
        <title>&sap; Systems</title>
        <mediaobject>
          <imageobject>
            <imagedata width="70%"
              fileref="trento-web-sapsystems.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para> This view provides the following: </para>
      <itemizedlist>
        <listitem>
          <para>
            A <guimenu>Health</guimenu> section on top with a summary of the &sap;
            systems statuses based on their runtime status (according to
            <command>sapcontrol</command>).
          </para>
        </listitem>
        <listitem>
          <para>
            A list of registered &sap; Systems with the following information for
            each one of them: health status, system ID (SID), database ID, tenant database,
            database IP address, and custom tags that you can manually set/remove.
            By clicking on the row of one particular system, a section opens up listing
            its &netweaver; instances on top and the database instances underneath,
            with relevant information for each one of them:
          </para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata fileref="trento-web-netweaver.png" width="80%"/>
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para>
            Ability to filters &sap; Systems by heath status, SID, and tags.
          </para>
        </listitem>
      </itemizedlist>

      <para> Clicking on a <guimenu>SID</guimenu> entry, opens up the
        <guimenu>SAP Systems</guimenu> details view which displays
        the following: </para>
      <itemizedlist>
        <title>&sap; System details</title>
        <listitem>
          <para>the <guimenu>Name</guimenu> and
            <guimenu>Type</guimenu> of this &sap; System.</para>
        </listitem>
        <listitem>
          <para>
            <guimenu>The NetWeaver; instances layout</guimenu>: for
            each instance, virtual host name, instance number,
            features (processes), HTTP and HTTPS ports, start
            priority, and SAPControl status. </para>
        </listitem>
        <listitem>
          <para>
            <guimenu>The list of hosts where the different NetWeaver
              instances are running</guimenu>, with the host name,
            the IP address, the cloud provider (when applicable),
            the cluster name (when applicable), and the &t.agent; version
            for each listed host. When you click the host name, it takes
            you to the corresponding <xref linkend="lst-trento-web-hosts-details" />.
          </para>
        </listitem>
      </itemizedlist>
      <figure>
        <title>&sap; System Details</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="trento-web-sap-systems-view.png" width="80%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section xml:id="sec-trento-hana-db-view">
      <title>&hana; databases view</title>
      <para> To get an overview of registered &hana; databases, click the
        <guimenu>HANA databases</guimenu> entry in the left sidebar. </para>
      <figure>
        <title>HANA databases</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-hanadb.png"
            />
          </imageobject>
        </mediaobject>
      </figure>
      <para>This view provides the following:</para>
      <itemizedlist>
        <listitem>
          <para>A <guimenu>Health</guimenu> section on top with a summary
          of the status of the &hana; databases based on their runtime status
          (according to <command>sapcontrol</command>).
          </para>
        </listitem>
        <listitem>
          <para> A list of registered &hana; databases with the
            following information for each one of them: health status, system ID
            (SID), a summary of the database instances and their status and custom
            tags that you can manuall set/remove.
            By clicking on the row of one particular database, a list of all related
            instances is displayed and for each one of them you can see the corresponding
            health status, its instance number, the feature (role) it provides, the system
            replication role and status (when applicable), the cluster name (when applicable)
            and the host where it is running.
          </para>
        </listitem>
        <listitem>
          <para> Ability to filters &hana; databases by health status, SID, and custom tags.
          </para>
        </listitem>
      </itemizedlist>
      <para> Clicking on one of the <guimenu>SID</guimenu>s opens the
        <guimenu>HANA Databases</guimenu> detail view which shows
        the following: </para>
      <itemizedlist>
        <title><guimenu>HANA Database</guimenu> details view</title>
        <listitem>
          <para>
            <guimenu>Layout</guimenu> section: lists all related
            &hana; instances with their corresponding virtual hostname, instance number,
            features (roles), HTTP/HTTPS ports, start priorities, and SAPControl status.
          </para>
        </listitem>
        <listitem>
          <para>
            <guimenu>Hosts</guimenu> section: lists the hosts where all the related
            instances are running and for each host it provides the host name, the
            local IP address(es), the cloud provider (when applicable), the cluster
            name (when applicable), the system ID, and the &t.agent; version.
            </para>
          <para> Clicking on a host name takes you to the
            corresponding <xref linkend="lst-trento-web-hosts-details" />.
          </para>
        </listitem>
      </itemizedlist>
      <figure>
        <title>HANA Database details</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="trento-web-hana-database.png" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section xml:id="sec-trento-configuration-checks">
      <title>HA configuration checks</title>
      <para> To get an overview of the configuration checks that Trento
        can manage click the <guimenu>Checks catalog</guimenu>
        entry in the left sidebar.
      </para>
      <figure>
        <title><guimenu>Checks catalog</guimenu></title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%"
              fileref="trento-web-settings-catalogs.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        The view allows you to select the platform which values you
        want to review: Azure, AWS, or GCP. For each platform, it shows
        the configuration checks that Trento can perform for the different
        cluster components: &corosync;, &pace;, SBD, Azure Fence Agent,
        &hana; System Replication Resource Agent, OS and package version,
        and miscellaneous.
      </para>
      <para> Checks are grouped by components. Each test is identified by
        a test ID, next to which we can see the check description and an
        info icon. By clicking on the info icon we get detail
        information about the corresponding check: abstract, remediation
        actions (what to do when the check is negative) and related
        references. </para>
      <para> What checks are carried out for each particular cluster is
        determined using the <guimenu>Settings</guimenu> button in the
        corresponding cluster detail view. See <xref
          linkend="lst-trento-web-pace-cluster-settings" /> for
        details. </para>
    </section>
  </section>
-->
  <section xml:id="sec-trento-updating-trentoserver">
    <title>Updating &t.server;</title>
    <para> The procedure to update the &t.server; depends on how it was installed.
     If it was installed manually, then it must be updated manually using the latest versions
     of the container images available in the SUSE public registry. If it was installed using
     Helm chart, it can be updated using the same Helm command as for the installation:</para>
   <screen>helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable>
        </screen>
   <para>A few things to consider:</para>
      <itemizedlist>
        <listitem>
          <para>Remember to set the helm experimental flag if you are using a version of Helm lower than 3.8.0.
          </para>
        </listitem>
        <listitem>
        <para>When updating from a Trento version lower than 2.0.0 to version 2.0.0 or higher, an additional flag
    must be set in the Helm command:</para>
   <screen>helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set rabbitmq.auth.erlangCookie=$(openssl rand -hex 16)
        </screen>
        </listitem>
        <listitem>
          <para> If email alerting has been enabled, then the corresponding <parameter>trento-web.alerting</parameter> parameters
           should be set in the Helm command as well.
          </para>
        </listitem>
      </itemizedlist>
  </section>

  <section xml:id="sec-trento-updating-trentoagent">
    <title>Updating a &t.agent;</title>
    <para>
      To update the &t.agent;, do the following:
    </para>
    <procedure>
      <step>
        <para>Log in to the &t.agent; host.</para>
      </step>
      <step>
        <para>Stop the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl stop trento-agent</screen>
      </step>
      <step>
        <para>
          Install the new package:
        </para>
        <screen>&prompt.user;sudo zypper ref
&prompt.user;sudo zypper install trento-agent</screen>
      </step>
      <step>
        <para>
          Copy file <filename>/etc/trento/agent.yaml.rpmnew</filename> onto <filename>/etc/trento/agent.yaml</filename>
          and ensure that entries <parameter>facts-service-url</parameter>,
          <parameter>server-url</parameter>, and <parameter>api-key</parameter>
          are maintained properly in the latter:
        </para>
        <itemizedlist>
          <listitem>
            <para><parameter>facts-service-url</parameter>: the address of the AMQP service shared with the checks engine where fact gathering requests are received.
           The right syntax is <uri>amqp://trento:trento@<replaceable>TRENTO_SERVER_HOSTNAME</replaceable>:5672</uri>. </para>
          </listitem>
          <listitem>
            <para><parameter>server-url</parameter>: HTTP URL for the &t.server;
              (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>)
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>api-key</parameter>: the API key retrieved from the Web console
            </para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>
          Start the &t.agent;:
        </para>
        <screen>&prompt.user;sudo systemctl start trento-agent</screen>
      </step>
      <step>
        <para>Check the status of the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl status trento-agent
● trento-agent.service - &t.agent; service
     Loaded: loaded (/usr/lib/systemd/system/trento-agent.service; enabled; vendor preset: disabled)
     Active: active (running) since Wed 2021-11-24 17:37:46 UTC; 4s ago
   Main PID: 22055 (trento)
      Tasks: 10
     CGroup: /system.slice/trento-agent.service
             ├─22055 /usr/bin/trento agent start --consul-config-dir=/srv/consul/consul.d
             └─22220 /usr/bin/ruby.ruby2.5 /usr/sbin/SUSEConnect -s

[...]</screen>
      </step>
      <step>
        <para>Check the version in the <guimenu>Hosts</guimenu> overview of the &t.web; (URL
              <uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>).</para>
      </step>
      <step>
        <para> Repeat this procedure in all &t.agent; hosts. </para>
      </step>
    </procedure>

  </section>

   <section xml:id="sec-trento-uninstall-trentoserver">
    <title>Uninstalling &t.server;</title>
    <para> If &t.server; was deployed manually, then you need to uninstall it manually.
     If  &t.server; was deployed using the Helm chart, use Helm to uninstall it as follows:</para>
     <screen>helm uninstall trento-server</screen>
  </section>

  <section xml:id="sec-trento-uninstall-trentoagent">
    <title>Uninstalling a &t.agent;</title>
    <para>
      To uninstall a &t.agent;, perform the following steps:
    </para>
    <procedure>
      <step>
        <para>Log in to the &t.agent; host.</para>
      </step>
      <step>
        <para>Stop the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl stop trento-agent</screen>
      </step>
      <step>
        <para>
          Remove the package:
        </para>
        <screen>&prompt.user;sudo zypper remove trento-agent</screen>
      </step>
    </procedure>
  </section>

  <!-- 2022-04-29: According to Alberto, this feature is not available in the GA version. -->
<!--
  <section xml:id="sec-trento-feedback">
    <title>Giving feedback</title>
    <para>
      On the right side of &t.server; console you will find the button <guimenu>Report feedback</guimenu>.
      You can use it to provide feedback, rate the application, share what you liked and what can be improved.
      For enterprise support requests, use the <link xlink:href="&sccurl;">&scc;</link>.
    </para>
  </section>
-->

  <section xml:id="sec-trento-report-problem">
    <title>Reporting a Problem</title>
    <para>
      Any &suse; customer, with a registered &sles4sap;&nbsp;15 (SP1 or higher) distribution,
     experiencing an issue with &trentopremium;, can report the problem either directly in the &scc;
     or through the corresponding vendor, depending on their licensing model. Any how, the problem has to reported under
     &sles4sap;&nbsp;15 and component trento. 
    </para>
      <para>
      When opening a support case for Trento, provide the following information, which can be retrieved
     as explained in section <xref linkend="sec-trento-problemanalysis" />:
    </para>
         <itemizedlist>
          <listitem>
            <para>The output of the Trento support plugin.</para>
          </listitem>
           <listitem>
            <para>Your scenario dump.</para>
          </listitem>
        </itemizedlist>
   <para>
      For issues with a particular &t.agent;, or a component discovered by a particular &t.agent;, also provide the following:
    </para>
            <itemizedlist>
          <listitem>
            <para>The status of the &t.agent;.</para>
          </listitem>
          <listitem>
            <para>The journal of the &t.agent;.</para>
          </listitem>
          <listitem>
            <para>The output of the command <command>supportconfig</command> in the &t.agent; host. See
            <link xlink:href="https://documentation.suse.com/sles/html/SLES-all/cha-adm-support.html#sec-admsupport-cli"/>
             for information on how to run this command from command line.
           </para>
          </listitem>
        </itemizedlist>
  </section> 
 
  <section xml:id="sec-trento-problemanalysis">
    <title>Problem Analysis</title>
    <para>
      This section covers some common problems and how to analyze them.
    </para>

    <section>
      <title>&t.server;</title>
      <para>To analyze issues within the application, we have two tools at our
        disposal. They both help us collect information/data that might be
        useful when troubleshooting/analyzing the issue.</para>

      <section>
        <title>Trento Support Plugin</title>
        <para> The Trento support plugin automates the collection of logs and relevant
          runtime information on the server side. Using the plugin requires a host 
         with the following setup:</para>
                   <itemizedlist>
          <listitem>
            <para>The packages <package>jq</package> and <package>python3-yq</package> are installed.</para>
          </listitem>
          <listitem>
            <para>Helm is installed;.</para>
          </listitem>
          <listitem>
            <para>The command <command>kubectl</command> is installed and connected to the K8s cluster where &t.server; is running.
           </para>
          </listitem>
        </itemizedlist>
       <para>To use it, proceed as follows: </para>
        <procedure>
          <step>
            <para>Download the Trento support plugin script:</para>
            <screen>&prompt.root;<command>wget</command> https://raw.githubusercontent.com/trento-project/helm-charts/main/scripts/trento-support.sh</screen>
          </step>
          <step>
            <para>Make the script executable:</para>
            <screen>&prompt.root;<command>chmod</command> +x trento-support.sh</screen>
          </step>
          <step>
            <para>Set the &k8s; configuration file and execute the script:</para>
            <screen>&prompt.root;<command>KUBECONFIG=/etc/rancher/k3s/k3s.yaml ./trento-support.sh</command> --output file-tgz --collect all</screen>
          </step>
          <step>
            <para>Send the generated archive file to support for analysis.</para>
          </step>
        </procedure>
      </section>

      <section>
        <title>Scenario dump</title>
        <para>The scenario dump is a dump of the Trento database. It helps the Trento team
          to recreate the scenario to test it. Using the script
        that generates the dump requires a host with the following setup:</para>
                   <itemizedlist>
          <listitem>
            <para>The command <command>kubectl</command> is installed and connected to the K8s cluster where Trento Server is running.
           </para>
          </listitem>
        </itemizedlist>
          <para>To generate the dump, proceed as follows:</para>
        <procedure>
          <step>
            <para>Download the latest version of the dump script:</para>
            <screen>&prompt.user;<command>wget</command> https://raw.githubusercontent.com/trento-project/web/main/hack/dump_scenario_from_k8.sh</screen>
          </step>
          <step>
            <para>Make the script executable:</para>
            <screen>&prompt.user;<command>chmod</command> +x dump_scenario_from_k8.sh</screen>
          </step>
          <step>
            <para>Set the environment variable <envar>KUBECONFIG</envar> appropriately.</para>
          </step>
          <step>
            <para>Generate the dump:</para>
            <screen>&prompt.user;<command>./dump_scenario_from_k8.sh</command> -n <replaceable>SCENARIO_NAME</replaceable> -p <replaceable>PATH</replaceable></screen>
          </step>
          <step>
          <para>Go to <filename>/scenarios/</filename>, package all the JSON files and send
            them to support for analysis.</para>
          </step>
        </procedure>
      </section>
    </section>

    <section>
      <title>&t.agent;</title>
      <para>The first source to analyze issues with the &t.agent; is the &t.agent;
        status, which can be retrieved as follows:</para>
      <screen>&prompt.user;<command>sudo systemctl status</command> trento-agent</screen>
      <para>If further analysis is required, it is convenient to activate
        debug log level for the agent. A detailed log can be then retrieved from the journal:</para>
      <procedure>
        <step>
          <para>Add parameter <parameter>log-level</parameter> with value <literal>debug</literal> to the
            <filename>/etc/trento/agent.yaml</filename> configuration file.</para>
          <screen>&prompt.user;<command>sudo vi</command> /etc/trento/agent.yaml</screen>
        </step>
        <step>
          <para>Add the following entry:</para>
          <screen>log-level: debug</screen>
        </step>
        <step>
          <para>Restart the agent:</para>
          <screen>&prompt.user;<command>sudo systemctl restart</command> trento-agent</screen>
        </step>
        <step>
          <para>Retrieve the log from the journal:</para>
          <screen>&prompt.user;<command>sudo journalctl</command> -u trento-agent</screen>
        </step>
      </procedure>
    </section>

    <section>
      <title>Platform</title>
      <para />
          <section>
      <title>Platform-independent</title>
      <para />
      <procedure>
        <step>
          <para>Set environment variable <envar>KUBECONFIG</envar> appropriately. When working with K3s:</para>
          <screen>&prompt.user;<command>export KUBECONFIG</command>=/etc/rancher/k3s/k3s.yaml</screen>
        </step>
        <step>
          <para>List pods running in &k8s; cluster and their status. Trento Server currently consists of six pods: </para>
          <screen>&prompt.user;<command>kubectl get pods</command>
trento-server-grafana-*
trento-server-prometheus-server-*
trento-server-postgresql-0
trento-server-web-*
trento-server-wanda-*
trento-server-rabbitmq-0</screen>
        </step>
        <step>
          <para>Retrieve details about one particular pod:</para>
          <screen>&prompt.user;<command>kubectl describe pod</command> <replaceable>POD_NAME</replaceable></screen>
        </step>
        <step>
          <para>Retrieve the log of one particular pod:</para>
          <screen>&prompt.user;<command>kubectl logs</command> <replaceable>POD_NAME</replaceable></screen>
        </step>
        <step>
          <para>Follow the log of one particular pod:</para>
          <screen>&prompt.user;<command>kubectl logs</command> <replaceable>POD_NAME</replaceable> --follow</screen>
        </step>
      </procedure>
    </section>

    </section>
  </section>

  <section xml:id="sec-trento-more-information">
    <title>More information</title>
    <itemizedlist>
      <listitem>
        <para>Homepage: <link xlink:href="https://www.trento-project.io/"/></para>
      </listitem>
      <listitem>
        <para>Trento project: <link xlink:href="https://github.com/trento-project/trento"/></para>
      </listitem>
    </itemizedlist>
  </section>
  <!--<xi:include href="common_legal.xml"/>-->
</article>
